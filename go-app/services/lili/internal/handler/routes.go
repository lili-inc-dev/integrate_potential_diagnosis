// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"github.com/80andCo/LiLi-LABO/services/lili/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/contacts",
				Handler: ContactHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/inactive-users/me",
				Handler: FindInactiveUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/inactive-users/me",
				Handler: CreateInactiveUserHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/inactive-users/me/email/confirm",
				Handler: ConfirmInactiveUserEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/inactive-users/me/email/resend-auth-code",
				Handler: ResendAuthCodeRequestHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/users/me",
				Handler: CreateUserHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/master/genders",
				Handler: FindInactiveUserGenderListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/master/service-triggers",
				Handler: FindInactiveUserServiceTriggerListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/master/desired-annual-incomes",
				Handler: FindInactiveUserDesiredAnnualIncomeListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/master/interest-topics",
				Handler: FindInactiveUserInterestTopicListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user/inactive"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthenticateUser},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/diagnoses/me/start",
					Handler: CreateDiagnoseStartHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/personality-diagnoses",
					Handler: FindPersonalityDiagnoseHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/personality-diagnose-answers/me",
					Handler: FindPersonalityDiagnoseAnswerResultHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/personality-diagnose-answers/me",
					Handler: CreatePersonalityDiagnoseAnswerHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/market-value-diagnoses",
					Handler: FindMarketValueDiagnoseHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/market-value-diagnose-answers/me",
					Handler: FindMarketValueDiagnoseAnswerResultHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/market-value-diagnose-answers/me",
					Handler: CreateMarketValueDiagnoseAnswerHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/general-users/me",
					Handler: GeneralUserDetailHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/update-general-users/me",
					Handler: UpdateGeneralUserHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/career-work-answers/me",
					Handler: CreateCareerWorkAnswerHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/notices",
					Handler: FindNoticeListHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/users/me",
					Handler: UnregisterUserHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/master/genders",
					Handler: FindGenderListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/master/service-triggers",
					Handler: FindServiceTriggerListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/master/desired-annual-incomes",
					Handler: FindDesiredAnnualIncomeListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/master/interest-topics",
					Handler: FindInterestTopicListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/line/login",
				Handler: LineLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/line/callback",
				Handler: LineCallbackHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthenticateAdmin},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/admins/:id",
					Handler: FindAdminHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/admins",
					Handler: FindAdminListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/admins",
					Handler: CreateAdminHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/admins/:id",
					Handler: UpdateAdminHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/admin-roles",
					Handler: FindAdminRoleListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/mypages",
					Handler: FindMyPageHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/mypages",
					Handler: UpdateMyPageHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/users",
					Handler: FrontUserListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/users/:id",
					Handler: FrontUserDetailHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/users/:id",
					Handler: UpdateFrontUserHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/diagnose-results/:answer_group_id",
					Handler: FindUserDiagnoseHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/notices",
					Handler: FindNoticeListForAdminHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/notices/:id",
					Handler: FindNoticeDetailForAdminHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/notices",
					Handler: CreateNoticeHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/notices/:id",
					Handler: UpdateNoticeHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/admin"),
	)
}
